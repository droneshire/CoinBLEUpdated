dim result

dim in(20) # endpoint data in
dim in_len

dim out(20)  # endpoint data out
dim out_len

event system_boot(major,minor,patch,build,ll_version,protocol,hw)
    call hardware_set_txpower(15)
	call system_endpoint_set_watermarks(system_endpoint_uart1, 0, 0) # disable watermarks
    call gap_set_mode(gap_general_discoverable, gap_undirected_connectable)
end

event attributes_value(connection, reason, handle, offset, value_len, value_data)
  # Characteristic TX has been written
  if handle = xgatt_tx then 
	out(0:value_len) = value_data(0:value_len)
	out_len = value_len
	call system_endpoint_set_watermarks(system_endpoint_uart1, $FF, out_len)	#enable TX watermarks
  end if
end

event system_endpoint_watermark_tx(endpoint, size)
    if endpoint = system_endpoint_uart1 then
        call system_endpoint_set_watermarks(system_endpoint_uart1, 1, 0) # disable TX watermark and enable RX
        call system_endpoint_tx(system_endpoint_uart1, out_len, out(0:out_len))
		out_len=0
		#call system_endpoint_set_watermarks(system_endpoint_uart1, 1, $FF) # enable RX watermark
    end if
end

event system_endpoint_watermark_rx(endpoint, size)
	if endpoint=system_endpoint_uart1 then
		in_len=size
		if in_len > 20 then
			in_len = 20
		end if
		
		call system_endpoint_set_watermarks(system_endpoint_uart1, 0, $FF) # disable RX watermarks
		call system_endpoint_rx(system_endpoint_uart1, 1)(result, in_len, in(0:in_len))
		
		call attributes_write(xgatt_rx, 0, in_len, in(0:in_len))
	end if
  
end

event connection_disconnected(handle,reason)
	call system_endpoint_set_watermarks(system_endpoint_uart1, 0, 0) # disable watermarks
    call gap_set_mode(gap_general_discoverable,gap_undirected_connectable)
end